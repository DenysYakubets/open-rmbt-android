apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: "$project.rootDir/tools/script-lint.gradle"
apply from: "$project.rootDir/tools/script-ktlint.gradle"
apply from: "$project.rootDir/tools/utils.gradle"

android {

    compileSdkVersion config.targetSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "GIT_VERSION_NAME", "\"${gitVersionName()}\""
        buildConfigField "String", "GIT_BRANCH_NAME", "\"${gitBranchName()}\""
        buildConfigField "String", "GIT_FULL_HASH", "\"${gitFullHash()}\""
        buildConfigField "int", "GIT_VERSION_CODE", gitVersionCode()
        buildConfigField "boolean", "GIT_IS_DIRTY", gitIsDirty()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api project(path: ':control_client')
    implementation project(path: ':rmbt-client')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"

    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.work:work-runtime-ktx:$versions.work_manager"
    implementation "androidx.preference:preference-ktx:$versions.androidx_core"

    implementation "android.arch.persistence.room:runtime:$versions.room"
    annotationProcessor "android.arch.persistence.room:compiler:$versions.room"

    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    implementation "com.google.dagger:dagger:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"

    implementation "com.jakewharton.timber:timber:$versions.timber"

    implementation "com.google.code.gson:gson:$versions.gson"

    testImplementation "junit:junit:$versions.junit"

    androidTestImplementation "androidx.test:runner:$versions.test_runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso_core"
    androidTestImplementation "android.arch.persistence.room:testing:$versions.roomVersion"
}

task dokkaMarkdown(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'gfm'
    outputDirectory = "$project.rootDir/build_results/markdown"
}